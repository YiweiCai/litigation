<?xml version="1.0" encoding="UTF-8" ?>
<queryMapping>
    <!-- 按条件查询用户 -->
    <query name="system.findUsers">
       <hql>
          <![CDATA[
            select user from SysUser as user 
            <#if _query_roleId??>
	             , SysUserRole as ur 
	        </#if> 
            where 1=1 
            <#if loginName??>
	            and user.loginName=:loginName
	        </#if> 
	        <#if passWord??>
	            and user.passWord=:passWord
	        </#if> 
            <#if deptId??>
	            and user.sysDept.id=:deptId 
	        </#if> 
	        <#if roleId??>
	            and user.id=ur.sysUser.id and ur.sysRole.id=:roleId 
	        </#if>
	        <#if userName??>
	            and user.userName like:userName  
	        </#if>
	        <#if userIdList??>
	             and user.id in (:userIdList) 
	        </#if>
	        <#if organization??>
	             and organization like:organization
	        </#if>
	        <#--超级管理员，可查看所有的部门，非超级管理员，只可查询本部门和下级部门的用户-->
		    <#if parentDeptLevel??>
		         and user.sysDept.deptLevel like :parentDeptLevel 
		    </#if>
	         
	        <#if orderattr??>
	              order by convert_gbk(${orderattr}) ${ordertype}
	        <#else>
	              order by user.createTime desc
	        </#if>
          ]]>
       </hql>
    </query>
    
     <query name="system.findDepts">
       <hql>
          <![CDATA[
               select dept from SysDept as dept 
               where 1=1 
		       <#--有上级部门-->
		       <#if _query_existedParentDept??>
		            and dept.sysDept.id is not null
		       </#if>
		       <#--由上级部门获得所有的直接下级部门-->
		       <#if parentId??>
		             and dept.sysDept.id=:parentId
		       </#if>
		       <#--由部门名称查询部门-->
		       <#if deptName??>
		             and dept.deptName=:deptName
		       </#if>
		       <#--获得所有下级部门，包括直接部门和间接部门-->
		       <#if deptLevel??>
		             and dept.deptLevel like :deptLevel
		       </#if>
		       order by dept.createTime asc
          ]]>
       </hql>
    </query>
    
     <!-- 获得部门层级/根据上级部门获得所有下级直接部门的数量 -->
    <query name="system.getCountSubDeptNumByParentId">
       <hql>
          <![CDATA[select count(dept.id) from SysDept as dept where dept.sysDept.id=:parentId order by dept.createTime asc]]>
       </hql>
    </query>
    
    <!-- 查询角色 -->
     <query name="system.findRoles">
       <hql>
          <![CDATA[
		       select role from SysRole as role 
		       where 1=1 
		       <#--有上级角色-->
		       <#if _query_existedParentRole??>
		            and role.sysRole.id is not null
		       </#if>
		       <#--由上级角色获得所有的下级角色-->
		       <#if parentId??>
		             and role.sysRole.id=:parentId
		       </#if>
		       <#--由角色名称查询角色-->
		       <#if roleName??>
		             and role.roleName=:roleName
		       </#if>
		       order by role.createTime asc
          ]]>
       </hql>
    </query>
	 
    <!-- 获得角色层级/根据上级角色获得所有下级直接角色的数量 -->
    <query name="system.getCountSubRoleNumByParentId">
       <hql>
          <![CDATA[select count(role.id) from SysRole as role where role.sysRole.id=:parentId order by role.createTime asc]]>
       </hql>
    </query>
    <!-- 获得角色对应的菜单 -->
     <query name="system.findRoleMenus">
       <hql>
          <![CDATA[
               select rm from SysRoleMenu rm 
               where 1=1 
               <#--获得角色对应的菜单-->
               <#if roleId??>
                   and rm.sysRole.id=:roleId
               </#if>
               <#--权限List-->
               <#if authList??>
                    and rm.auth IN (:authList) 
               </#if>
               <#--菜单路径-->
               <#if menuPath??>
                    and rm.sysMenu.menuPath=:menuPath 
               </#if>
          ]]>
       </hql>
    </query>
    <!-- 获得角色对应的菜单 -->
     <query name="system.findRoleChannels">
       <hql>
          <![CDATA[
               select rc from CmsRoleChannel rc 
               where 1=1 
               <#--获得角色对应的菜单-->
               <#if roleId??>
                   and rc.sysRole.id=:roleId
               </#if>
               <#--权限List-->
               <#if authList??>
                    and rc.auth rc (:authList) 
               </#if>
               <#if isDynamicUrl?? && isDynamicUrl=='0'>
	            and (rc.cmsChannel.isDynamicUrl=:isDynamicUrl or rc.cmsChannel.isDynamicUrl='3' or rc.cmsChannel.isDynamicUrl is null)
	           </#if>
	           
		       order by rc.createTime asc
              
          ]]>
       </hql>
    </query>
    <!-- 查询菜单 -->
     <query name="system.findMenus">
       <hql>
          <![CDATA[
          select menu from SysMenu as menu 
          where 1=1 
          <#if parentId??>
              and menu.sysMenu.id=:parentId 
          </#if>
          order by menu.createTime asc
          ]]>
       </hql>
	</query>
	 
	 <!-- 查询数据字典 -->
	 <query name="system.findDataDictionarys">
       <hql>
          <![CDATA[
	          select dd from SysDataDictionary as dd 
	          where 1=1 
	          <#if parentId??>
	              and dd.parentDD.id=:parentId
	          </#if>
	          <#if ddValue??>
	              and dd.ddValue =:ddValue
	          </#if>
	          <#if undefined1??>
	               and dd.undefined1=:undefined1 
	          </#if>
	          <#if _query_exceptUndefined1??>
	               and dd.undefined1 is null 
	          </#if>
	          order by dd.createTime asc
          ]]>
       </hql>
	</query>
	<!-- 直接sql查询所有的数据字典 ,不包括根级字典，方式1-->
	<query name="system.findDataDictionarys1">
       <sql>
          <![CDATA[
	          select id,parent_id parentid,dd_value ddvalue,dd_name ddname,en_dd_name enddname,remark,undefined1 
	          from sys_data_dictionary 
	          where parent_id is not null
          ]]>
       </sql>
	</query>
	<!-- 直接sql查询数据字典发方式2-->
	<query name="system.findDataDictionarys2">
       <sql>
          <![CDATA[
	          select id,parent_id parentid,dd_value ddvalue,dd_name ddname,en_dd_name enddname,remark,undefined1 
	          from sys_data_dictionary 
	          where id in (select distinct parent_id from sys_data_dictionary)
          ]]>
       </sql>
	</query>
	  <!-- 用户登录日志 -->
	 <query name="system.userLoginLog.findPage">
        <hql>
           <![CDATA[
	          select log from UserLoginLog as log 
	          where 1=1 
	          <#if loginUserId??>
	              and log.loginUser.id=:loginUserId 
	          </#if> 
	          <#if loginUserName??>
	               and log.loginUser.userName like:loginUserName 
	          </#if>
	          <#if startLoginTime??>
	                and log.loginTime>=:startLoginTime 
	          </#if>
	           <#if endLoginTime??>
	                and log.loginTime<=:endLoginTime 
	          </#if>
	          <#if orderattr??>
	                order by convert_gbk(${orderattr}) ${ordertype}
	          <#else>
	                order by log.createTime desc 
	          </#if>
	       ]]>
        </hql>	 
	 </query>
	 <!-- 查询sql/hql语句 -->
	 <query name="system.findQuerySqlHqls">
	    <hql>
	         <![CDATA[
	            from QuerySqlHql as qhs 
	            where 1=1 
	            <#if menuId??>
	                and qhs.menu.id=:menuId 
	            </#if>
	            <#if queryName??>
	                and qhs.queryName=:queryName
	            </#if>
	           order by qhs.createTime asc
	         ]]>
	    </hql>
	</query>
	<!-- 查询邮箱服务器设置 -->
	<query name="system.findMailServerSettings">
	    <hql>
	    <![CDATA[from SysMailServerSetting]]>
	    </hql>
	</query>
	<!-- 查询系统规则设置 -->
	<query name="system.findSysRuleSettings">
	    <hql>
	    <![CDATA[
             from SysRuleSetting where 1=1 
             <#if ruleType??>
                 and ruleType =:ruleType
             </#if>
        ]]>
	    </hql>
	</query>
	<!-- 查询附件 -->
	<query name="system.findUploadFiles">
	    <hql>
	    <![CDATA[
	       from UploadFile uf 
	       where 1=1 
	       <#if ownerId??>
	             and uf.ownerId=:ownerId
	       </#if>
	    ]]>
	    </hql>
	</query>
</queryMapping>
